name: Build and Release VIS_API

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: windows-latest

    steps:
      # Step 1: 檢出代碼
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: 設置 .NET 環境
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # Step 3: 恢復依賴
      - name: Restore dependencies
        run: dotnet restore VIS_API/VIS_API.sln

      # Step 4: 構建專案
      - name: Build project
        run: dotnet build VIS_API/VIS_API.sln --configuration Release --no-restore

      # Step 5: 壓縮 VIS_API 資料夾
      - name: Package VIS_API
        run: |
          Compress-Archive -Path VIS_API -DestinationPath VIS_API-v${{ github.ref_name }}.zip

      # Step 6: 保存壓縮包作為 Artifact
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: VIS_API_Artifacts
          path: VIS_API-v${{ github.ref_name }}.zip

      # Step 7: 創建 GitHub Release 並上傳壓縮包
      - name: Create and Upload GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## Release Notes
            - This release contains the latest build of VIS_API.
          artifacts: VIS_API-v${{ github.ref_name }}.zip
          draft: false
          prerelease: false
